plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.postgresql:postgresql:42.2.24'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.0'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.1.5'
	implementation 'org.hibernate.validator:hibernate-validator:7.0.2.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.mybatis:mybatis:3.5.7'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	archiveFileName = "${archiveBaseName.get()}-${archiveVersion.get()}.${archiveExtension.get()}"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
	}
}

compileJava {
	options.compilerArgs += ["-parameters"]
}
